import{_ as n,c as r,e as s,a as t,d as o,b as l,w as d,r as i,o as p}from"./app-CRUSJUWc.js";const c={};function g(m,e){const a=i("RouteLink");return p(),r("div",null,[e[3]||(e[3]=s('<p>整个过程从前端的角度来看大致如下：</p><p><strong><code>1. DNS解析</code></strong><strong><code>2. TCP连接+HTTP请求</code></strong><strong><code>3. 浏览器解析渲染页面</code></strong><strong><code>4. 断开连接</code></strong></p><h1 id="_1、dns解析" tabindex="-1"><a class="header-anchor" href="#_1、dns解析"><span>1、DNS解析</span></a></h1><p>首先在本地域名服务器中查询ip地址，如果没有，按照如下顺序： 根域名服务器 =&gt; 顶级域名服务器 =&gt; ... =&gt; 本地域名服务器 <code>. =&gt; .com. =&gt; google.com. =&gt; www.google.com.</code></p><h1 id="_2、tcp请求-三次握手-http请求" tabindex="-1"><a class="header-anchor" href="#_2、tcp请求-三次握手-http请求"><span>2、TCP请求（三次握手）+ HTTP请求</span></a></h1><p>客户端： 我要请求数据，可以吗？ 服务器： 可以 客户端： 好的</p><p>客户端与服务器建立连接后就可以通信，浏览器向web服务器发送http请求</p><h1 id="_3、浏览器解析渲染页面" tabindex="-1"><a class="header-anchor" href="#_3、浏览器解析渲染页面"><span>3、浏览器解析渲染页面</span></a></h1><p><img src="https://user-images.githubusercontent.com/25027560/46640050-6420ad80-cb9c-11e8-991f-4f039e0eb4a9.png" alt=""></p><ol><li>处理 HTML 标记并构建 DOM 树</li><li>处理 CSS 标记并构建 CSSOM 树</li><li>将 DOM 和 CSSOM 合并成一个渲染树</li><li>根据渲染树来布局，以计算每个结点的几何信息</li><li>调用 GPU 绘制，合成图层，显示在屏幕上</li></ol><p><code>DOMContentLoaded</code>事件触发代表初始的HTML被完全加载和解析，不需要等待CSS，JS，图片加载。</p><p><code>Load</code>事件触发代表页面中的DOM，CSS，JS，图片已经全部加载完毕。</p>',12)),t("p",null,[e[1]||(e[1]=o("如果相对浏览器渲染这块有更深入的了解，可以看")),l(a,{to:"/blogs/network-browser/browser-rendering.html"},{default:d(()=>e[0]||(e[0]=[o("这篇文章")])),_:1}),e[2]||(e[2]=o("。"))]),e[4]||(e[4]=t("h1",{id:"_4、断开连接-四次挥手",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_4、断开连接-四次挥手"},[t("span",null,"4、断开连接，四次挥手")])],-1)),e[5]||(e[5]=t("p",null,"客户端：我没有数据要发送了，准备挂了 服务器：收到，但我还有一些数据没发送完，稍等一下 ...... 服务器：好了，发送完了，可以断开连接了 客户端：OK，你断开连接吧（内心独白：我将会在2倍的最大报文段生存时间后关闭连接，如果再收到服务器的消息，那么服务器就是没听到我最后这句话，我就再发送一遍）",-1))])}const u=n(c,[["render",g],["__file","url-to-page.html.vue"]]),b=JSON.parse('{"path":"/blogs/network-browser/url-to-page.html","title":"从输入URL到页面加载完成过程分析","lang":"zh-CN","frontmatter":{"title":"从输入URL到页面加载完成过程分析","date":"2019-3-25","editLink":false,"tags":["网络与浏览器"],"categories":["前端"]},"headers":[],"git":{"createdTime":1739535625000,"updatedTime":1739535625000,"contributors":[{"name":"sankigan","email":"sankigan@tencent.com","commits":1}]},"filePathRelative":"blogs/network-browser/url-to-page.md"}');export{u as comp,b as data};
