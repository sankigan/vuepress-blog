import{_ as i,c as n,a as l,e as d,d as o,b as a,r as t,o as s}from"./app-CRUSJUWc.js";const r={},g={href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"};function p(f,e){const c=t("ExternalLinkIcon");return s(),n("div",null,[l("blockquote",null,[l("p",null,[e[1]||(e[1]=o("本文主要参考阮一峰大大的")),l("a",g,[e[0]||(e[0]=o("这篇文章")),a(c)])])]),e[2]||(e[2]=d('<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071002.png" alt=""></p><h2 id="什么是-flex" tabindex="-1"><a class="header-anchor" href="#什么是-flex"><span>什么是 Flex ？</span></a></h2><p>Flex 是 Flexible Box 的缩写，意为“弹性布局”，用来为盒状模型提供最的灵活性。</p><p><strong>任何一个容器都可以指定为 Flex 布局</strong>。</p><p>注意：<strong>设置为 Flex 布局后，子元素的 <code>float</code> 、<code>clear</code> 和 <code>vertical-align</code> 属性将失效。</strong></p><h2 id="_1、基本概念" tabindex="-1"><a class="header-anchor" href="#_1、基本概念"><span>1、基本概念</span></a></h2><p>采用 Flex 布局的元素，称为 <strong>Flex 容器</strong>（Flex Container），简称“容器”。它的所有子元素自动成为容器成员，称为 <strong>Flex 项目</strong>（Flex Item），简称“项目”。</p><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png" alt=""></p><p>容器默认存在两根轴：</p><ul><li><code>水平的主轴（main axis）</code>：主轴开始位置叫做 <code>main start</code>，结束位置叫做 <code>main end</code></li><li><code>垂直的交叉轴（cross axis）</code>：交叉轴开始位置叫做 <code>cross start</code>，结束位置叫做 <code>cross end</code></li></ul><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做 <code>main size</code>，占据的交叉轴空间叫 <code>cross size</code></p><h2 id="_2、容器的属性" tabindex="-1"><a class="header-anchor" href="#_2、容器的属性"><span>2、容器的属性</span></a></h2><p>有以下 6 种：</p><ul><li><code>flex-direction</code></li><li><code>flex-wrap</code></li><li><code>flex-flow</code></li><li><code>justify-content</code></li><li><code>align-items</code></li><li><code>align-content</code></li></ul><h3 id="flex-direction" tabindex="-1"><a class="header-anchor" href="#flex-direction"><span><code>flex-direction</code></span></a></h3><p><strong><code>flex-direction</code> 属性决定主轴的方向（即项目排列的方向）。</strong></p><p>它可能有 4 个值：</p><ul><li><code>row</code>（默认值）：主轴为水平方向，起点在左端。</li><li><code>row-reverse</code>：主轴为水平方向，起点在右端。</li><li><code>column</code>：主轴为垂直方向，起点在上沿。</li><li><code>column-reverse</code>：主轴为垂直方向，起点在下沿。</li></ul><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071005.png" alt=""></p><h3 id="flex-wrap" tabindex="-1"><a class="header-anchor" href="#flex-wrap"><span><code>flex-wrap</code></span></a></h3><p><strong><code>flex-wrap</code> 属性定义，如果一条轴线排不下，如何换行。</strong></p><ul><li><code>nowrap</code>（默认值）：不换行。 <img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071007.png" alt=""></li><li><code>wrap</code>：换行，第一行在上方。 <img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071008.jpg" alt=""></li><li><code>wrap-reverse</code>：换行，第一行在下方。 <img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071009.jpg" alt=""></li></ul><h3 id="flex-flow" tabindex="-1"><a class="header-anchor" href="#flex-flow"><span><code>flex-flow</code></span></a></h3><p><strong><code>flex-flow</code> 属性是 <code>flex-direction</code> 属性和 <code>flex-wrap</code> 属性的简写形式，默认值是 <code>row nowrap</code></strong>。</p><h3 id="justify-content" tabindex="-1"><a class="header-anchor" href="#justify-content"><span><code>justify-content</code></span></a></h3><p><strong><code>justify-content</code> 属性定义了 <code>项目</code> 在 <code>主轴</code> 上的对齐方式</strong>。</p><p>它可能有 5 个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p><ul><li><code>flex-start</code>（默认值）：左对齐。</li><li><code>flex-end</code>：右对齐。</li><li><code>center</code>：居中。</li><li><code>space-between</code>：两端对齐，项目之间的间隔要相等。</li><li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071010.png" alt=""></p><h3 id="align-items" tabindex="-1"><a class="header-anchor" href="#align-items"><span><code>align-items</code></span></a></h3><p><strong><code>align-items</code> 属性定义了 <code>项目</code> 在 <code>交叉轴</code> 上的对齐方式</strong>。</p><p>它可能有 5 个值，具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p><ul><li><code>flex-start</code>：交叉轴的起点对齐。</li><li><code>flex-end</code>：交叉轴的终点对齐。</li><li><code>center</code>：交叉轴的中点对齐。</li><li><code>baseline</code>：项目的第一行文字的基线对齐。</li><li><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071011.png" alt=""></p><h3 id="align-content" tabindex="-1"><a class="header-anchor" href="#align-content"><span><code>align-content</code></span></a></h3><p><strong><code>align-content</code> 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</strong>。</p><ul><li><code>flex-start</code>：与交叉轴的起点对齐。</li><li><code>flex-end</code>：与交叉轴的终点对齐。</li><li><code>center</code>：与交叉轴的中点对齐。</li><li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li><code>stretch</code>（默认值）：轴线占满整个交叉轴。</li></ul><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071012.png" alt=""></p><h2 id="_3、项目的属性" tabindex="-1"><a class="header-anchor" href="#_3、项目的属性"><span>3、项目的属性</span></a></h2><p>有以下 6 种：</p><ul><li><code>order</code></li><li><code>flex-grow</code></li><li><code>flex-shrink</code></li><li><code>flex-basis</code></li><li><code>flex</code></li><li><code>align-self</code></li></ul><h3 id="order" tabindex="-1"><a class="header-anchor" href="#order"><span><code>order</code></span></a></h3><p><strong><code>order</code> 属性定义项目的排列顺序。数值越小，排列越靠前，默认为 0。</strong></p><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071013.png" alt=""></p><h3 id="flex-grow" tabindex="-1"><a class="header-anchor" href="#flex-grow"><span><code>flex-grow</code></span></a></h3><p><strong><code>flex-grow</code> 属性定义项目的 <code>放大</code> 比例。默认为 <code>0</code>，即如果存在剩余空间，也不放大。</strong></p><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071014.png" alt=""></p><p>如果所有项目的 <code>flex-grow</code> 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 <code>flex-grow</code> 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。</p><h3 id="flex-shrink" tabindex="-1"><a class="header-anchor" href="#flex-shrink"><span><code>flex-shrink</code></span></a></h3><p><strong><code>flex-shrink</code> 属性定义了项目的 <code>缩小</code> 比例。默认为 <code>1</code>，即如果空间不足，该项目将缩小。</strong></p><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071015.jpg" alt=""></p><p>如果所有项目的 <code>flex-shrink</code> 属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的 <code>flex-shrink</code> 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。</p><p>负值对该属性无效。</p><h3 id="flex-basis" tabindex="-1"><a class="header-anchor" href="#flex-basis"><span><code>flex-basis</code></span></a></h3><p><strong><code>flex-basis</code> 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 <code>auto</code>，即项目的本来大小。</strong></p><p>它可以设为跟 <code>width</code> 或 <code>height</code> 属性一样的值（比如 350px ），则项目将占据固定空间。</p><h3 id="flex" tabindex="-1"><a class="header-anchor" href="#flex"><span><code>flex</code></span></a></h3><p><strong><code>flex</code> 属性是 <code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code> 的简写，默认值为<code>0 1 auto</code>。后两个属性可选。</strong></p><p>该属性有两个快捷值：<code>auto</code> (<code>1 1 auto</code>) 和 <code>none</code> (<code>0 0 auto</code>)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><h3 id="align-self" tabindex="-1"><a class="header-anchor" href="#align-self"><span><code>align-self</code></span></a></h3><p><strong><code>align-self</code> 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</strong></p><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071016.png" alt=""></p><p>该属性可能取6个值，除了<code>auto</code>，其他都与 <code>align-items</code> 属性完全一致。</p><h2 id="完" tabindex="-1"><a class="header-anchor" href="#完"><span>完</span></a></h2>',65))])}const x=i(r,[["render",p],["__file","Flex.html.vue"]]),m=JSON.parse('{"path":"/blogs/CSS/Flex.html","title":"Flex","lang":"zh-CN","frontmatter":{"title":"Flex","date":"2019-3-21","editLink":false,"tags":["CSS"],"categories":["前端"]},"headers":[{"level":2,"title":"什么是 Flex ？","slug":"什么是-flex","link":"#什么是-flex","children":[]},{"level":2,"title":"1、基本概念","slug":"_1、基本概念","link":"#_1、基本概念","children":[]},{"level":2,"title":"2、容器的属性","slug":"_2、容器的属性","link":"#_2、容器的属性","children":[{"level":3,"title":"flex-direction","slug":"flex-direction","link":"#flex-direction","children":[]},{"level":3,"title":"flex-wrap","slug":"flex-wrap","link":"#flex-wrap","children":[]},{"level":3,"title":"flex-flow","slug":"flex-flow","link":"#flex-flow","children":[]},{"level":3,"title":"justify-content","slug":"justify-content","link":"#justify-content","children":[]},{"level":3,"title":"align-items","slug":"align-items","link":"#align-items","children":[]},{"level":3,"title":"align-content","slug":"align-content","link":"#align-content","children":[]}]},{"level":2,"title":"3、项目的属性","slug":"_3、项目的属性","link":"#_3、项目的属性","children":[{"level":3,"title":"order","slug":"order","link":"#order","children":[]},{"level":3,"title":"flex-grow","slug":"flex-grow","link":"#flex-grow","children":[]},{"level":3,"title":"flex-shrink","slug":"flex-shrink","link":"#flex-shrink","children":[]},{"level":3,"title":"flex-basis","slug":"flex-basis","link":"#flex-basis","children":[]},{"level":3,"title":"flex","slug":"flex","link":"#flex","children":[]},{"level":3,"title":"align-self","slug":"align-self","link":"#align-self","children":[]}]},{"level":2,"title":"完","slug":"完","link":"#完","children":[]}],"git":{"createdTime":1739535625000,"updatedTime":1739535625000,"contributors":[{"name":"sankigan","email":"sankigan@tencent.com","commits":1}]},"filePathRelative":"blogs/CSS/Flex.md"}');export{x as comp,m as data};
