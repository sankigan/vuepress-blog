import{_ as s,c as o,a as t,e as n,d as l,b as i,r as p,o as a}from"./app-CRUSJUWc.js";const g={},c={href:"https://csspod.com/frontend-performance-best-practices/#server-ajax-get",target:"_blank",rel:"noopener noreferrer"},m={href:"https://zhuanlan.zhihu.com/p/39028766",target:"_blank",rel:"noopener noreferrer"};function d(f,e){const r=p("ExternalLinkIcon");return a(),o("div",null,[t("blockquote",null,[t("p",null,[e[1]||(e[1]=l("!!! 重点请看")),t("a",c,[e[0]||(e[0]=l("这篇文章")),i(r)])])]),e[4]||(e[4]=n('<h2 id="请说出三种减少页面加载时间的方法" tabindex="-1"><a class="header-anchor" href="#请说出三种减少页面加载时间的方法"><span>请说出三种减少页面加载时间的方法</span></a></h2><ul><li>压缩js、html、css和图片，使用gzip编码传输，减少传输时间</li><li>选择合适的图片格式，合理利用缓存，减少传输时间</li><li>合并js、css及图片（精灵图），减少请求数量</li><li>避免不必要的repaint和reflow，合理利用GPU加速渲染</li><li>避免不必要的重定向，使用长连接，优化网络结构</li><li>使用CDN（内容分发网络）减短数据传输路径</li><li>优化服务器，快速响应与负载均衡</li></ul><hr><h2 id="什么是cdn-有哪些优点" tabindex="-1"><a class="header-anchor" href="#什么是cdn-有哪些优点"><span>什么是CDN？有哪些优点？</span></a></h2>',4)),t("blockquote",null,[t("p",null,[e[3]||(e[3]=l("参考")),t("a",m,[e[2]||(e[2]=l("这篇文章")),i(r)])])]),e[5]||(e[5]=n('<p>CDN，中文名叫<code>内容分发网络</code>，它的作用是<strong>减少传播时延</strong>，找最近的节点。CDN本质就一个是缓存，只是这个缓存离你特别近，不管是作为用户还是开发人员都能从中享受一点福利。</p><p><strong>CDN的优点</strong></p><ul><li>访问加速</li><li>减轻源站（服务器）负载</li><li>抗住攻击</li></ul><p><strong>CDN的缺点</strong></p><ul><li>只能对静态内容加速</li><li>内容更新时需要分发到其他节点</li><li>代价高昂</li></ul><p><strong>CDN与传统网站访问的区别</strong></p><ul><li>传统网站访问：</li></ul><p><img src="https://pic4.zhimg.com/80/f9708de32d641358e47edc96307775d5_hd.jpg" alt=""></p><ul><li>使用了CDN的网站访问</li></ul><p><img src="https://pic1.zhimg.com/80/79c1abc468349073fb433d0949423717_hd.jpg" alt=""></p><p>与传统访问方式不同，CDN网络则是在用户和服务器之间增加缓存层，将用户的访问请求引导到最优的缓存节点而不是服务器源站点，从而增加访问速度。</p><p><strong>完整的CDN工作流程</strong></p><p><img src="https://pic2.zhimg.com/80/049b124feb55100ff2f147b768ad4c8b_hd.jpg" alt="完整的CDN工作流程"></p><p>总结一下CDN的工作原理：通过权威DNS服务器来实现最优节点的选择，通过缓存来减少源站的压力。应用场景：静态网页、大文件下载、动态加速和应用加速等。</p><p><strong>应用与踩坑</strong></p><ul><li><p><strong>缓存设置</strong></p><p>max-age在Cache-Control中经常用于缓存的控制，可是max-age设置的缓存会应用于一个请求经过的每一级，如果我们希望CDN不缓存那么久，要怎么办呢？那就是s-maxage，它用于设置代理服务器的缓存时间，会覆盖max-age的设置，这样我们可以把max-age用于本地缓存，把s-maxage用于CDN缓存时间，避免脏数据的产生。</p></li><li><p><strong>缓存命中率</strong></p><p>对于一个缓存而言，还有一点非常重要，就是你的缓存到底有没有用，衡量这个东西的就是缓存命中率。如果只是静态资源，在刷新缓存之后，可能导致命中率下降，因此CDN的资源不适合经常刷新，换句话说，如果一个请求结果会经常进行变更，那么CDN基本就没有什么存在的意义了。</p></li><li><p><strong>判断是否命中缓存</strong></p><p>还要考虑的一件事是：这个资源是否命中了CDN，是否是因为CDN导致的问题。</p><p><img src="https://pic2.zhimg.com/80/v2-fdc8fbb56b81bf28a26bc03f289225a1_hd.jpg" alt=""></p><p>在各大厂商的CDN返回的数据中都会有一个X-Cache，上面内容是Hit或者Miss，还会加上诸如Memory或者Disk的缩写表示内存还是磁盘，如果出现Upstream或者Miss则表示没有命中。</p></li><li><p><strong>资源预热</strong></p><p>缓存设计中，预热是很重要的环节，在最初刚开始启动CDN的时候，CDN上并没有缓存数据，此刻大量的请求全部打向源站，肯定会把源站打挂，预热就是实现缓存热门数据，这样在业务上线时，CDN上已经有所需的数据了。</p></li><li><p><strong>Vary</strong></p></li><li><p><strong>Range</strong></p></li><li><p><strong>无私钥HTTPS</strong></p></li></ul><hr>',17))])}const N=s(g,[["render",d],["__file","performance.html.vue"]]),u=JSON.parse('{"path":"/blogs/performance/performance.html","title":"前端性能优化","lang":"zh-CN","frontmatter":{"title":"前端性能优化","date":"2019-4-4","editLink":false,"tags":["性能优化"],"categories":["前端"]},"headers":[{"level":2,"title":"请说出三种减少页面加载时间的方法","slug":"请说出三种减少页面加载时间的方法","link":"#请说出三种减少页面加载时间的方法","children":[]},{"level":2,"title":"什么是CDN？有哪些优点？","slug":"什么是cdn-有哪些优点","link":"#什么是cdn-有哪些优点","children":[]}],"git":{"createdTime":1739535625000,"updatedTime":1739535625000,"contributors":[{"name":"sankigan","email":"sankigan@tencent.com","commits":1}]},"filePathRelative":"blogs/performance/performance.md"}');export{N as comp,u as data};
